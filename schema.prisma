generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Task {
  id          Int      @id @default(autoincrement())
  startTime   DateTime @default(now())
  description String
  isComplete  Boolean  @default(false)
  duration    Int
  userId      String

  habit   Habit @relation(fields: [habitId], references: [id])
  habitId Int

  @@index(habitId)
}

model Habit {
  id   Int    @id @default(autoincrement())
  name String

  // The end date of the habit
  timeframe   DateTime
  userId      String
  constraints HabitConstraint[]
  tasks       Task[]
}

model HabitConstraint {
  id      Int    @id @default(autoincrement())
  prompt  String
  value   String
  userId  String
  habit   Habit  @relation(fields: [habitId], references: [id])
  habitId Int

  @@index(habitId)
}

model HabitCategory {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  tier      Int
  questions Question[]
}

model Question {
  id     Int    @id @default(autoincrement())
  prompt String

  categoryId Int
  category   HabitCategory @relation(fields: [categoryId], references: [id])

  // "input" | "multiple"
  type String

  followUpId Int?      @unique
  followUp   Question? @relation("FollowUpQuestion", fields: [followUpId], references: [id])

  options String[]

  parent Question? @relation("FollowUpQuestion")
}
